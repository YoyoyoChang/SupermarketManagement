@page "/categories"
@inject UseCases.UserCaseInterfaces.IViewCategoriesUseCase ViewCategoryUseCase
@inject UseCases.UserCaseInterfaces.IDeleteCategoryUseCase DeleteCategoryUseCase
@inject NavigationManager NavigationManager

<h3>Manage Categories</h3>

@if(_categories != null)
{
    <table class="table">
        <thead>
            <tr>
                <th>Name</th>
                <th>Description</th>
                <th>Edit</th>
                <th>Delete</th>
            </tr>
        </thead>
        <tbody>
            @foreach(var category in _categories)
            {
                <tr>
                    <td>@category.Name</td>
                    <td>@category.Description</td>
                    <td><button type="button" @onclick="() => EditCategory(category)" class="btn btn-link">Edit</button></td>
                    <td><button type="button" @onclick="() => DeleteCategory(category.Id)" class="btn btn-link">Delete</button></td>
                </tr>
            }
        </tbody>
    </table>
}
<br/>
<button type="button" @onclick="OnClickAddCategory" class="btn btn-primary">Add Category</button>
@code {
    private List<Category> _categories;

    protected override void OnInitialized()
    {
        base.OnInitialized();
        _categories = ViewCategoryUseCase.Execute().ToList();
    }

    private void OnClickAddCategory()
    {
        NavigationManager.NavigateTo("/addcategory");
    }

    private void EditCategory(Category category)
    {
        NavigationManager.NavigateTo($"/editCategory/{category.Id}");
    }

    private void DeleteCategory(int categoryId)
    {
        DeleteCategoryUseCase.Execute(categoryId);
        LoadCategories();
    }

    private void LoadCategories()
    {
        _categories = ViewCategoryUseCase.Execute().ToList();
    }
}
